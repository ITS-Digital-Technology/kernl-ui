//
// Forms
//


//
// Textual form controls
// .__control {
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="file"],
input[type="range"],
textarea,
select {
  display: block;
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: 1rem;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-image: none;
  background-clip: padding-box;
  border: $input-btn-border-width solid $input-border-color;
  border-radius: $input-border-radius;

  @include box-shadow($input-box-shadow);
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-color-placeholder;
    opacity: 1; // for Firefox
  }

  // Disabled and read-only inputs
  &:disabled,
  &[readonly] {
    background-color: $input-bg-disabled;
    opacity: 1; // for iOS
  }

  &:disabled {
    cursor: $cursor-disabled;
  }

  &.\--sm {
    padding: $input-padding-y-sm $input-padding-x-sm;
    font-size: $fs-sm;
    @include border-radius($input-border-radius-sm);
  }

  &.\--lg {
    padding: $input-padding-y-lg $input-padding-x-lg;
    font-size: $fs-root;
    @include border-radius($input-border-radius-lg);
  }
}

select {
  &:not([size]):not([multiple]) {
    $select-border-width: ($border-width * 2);
    height: calc(#{$input-height} + #{$select-border-width});
  }

  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }

  &.\--sm:not([size]):not([multiple]) {
    height: $input-height-sm;
  }

  &.\--lg:not([size]):not([multiple]) {
    height: $input-height-lg;
  }
}

// Make file inputs better match text inputs by forcing them to new lines.
input[type="file"],
input[type="range"] {
  display: block;
  padding: 0;
  background: none;
  box-shadow: none;
  border: 0 none;
  @include type-sm();
  margin: 3px 0;
}


//
// Labels

// For use with horizontal and inline forms, when you need the label text to
// align with the form controls.
label {
  @include type-sm();
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y/2;
  margin-bottom: 0; // Override the `<label>` default
  color: $gray-500;

  &.\--lg {
    padding-top: $input-padding-y-lg;
    padding-bottom: $input-padding-y-lg;
    font-size: 1.5rem;
  }

  &.\--sm {
    padding-top: $input-padding-y-sm;
    padding-bottom: $input-padding-y-sm;
    font-size: $fs-sm;
  }
}


//
// Legends

// For use with horizontal and inline forms, when you need the legend text to
// be the same size as regular labels, and to align with the form controls.
legend {
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  margin-bottom: 0;
  font-size: 1rem;
}

//
// Plain text in readonly inputs
//
// If you want to have <input readonly> elements in your form styled as plain text, use the .--plaintext class to remove the default form field styling and preserve the correct margin and padding.

input.\--plaintext {
  background-color: transparent !important;
  border-color: transparent;
  border-width: 1px 0;
  box-shadow: none;
  padding-right: 0;
  padding-left: 0;

  &::placeholder { color: inherit; }

  &.\--sm,
  &.\--lg {
    padding-right: 0;
    padding-left: 0;
  }
}


//
// Form groups
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.__group {
  margin-bottom: $form-group-margin-bottom;

  &.\--enclosed {
    position: relative;
    padding: $input-padding-y $input-padding-x;
    background-color: $input-bg;
    border: $input-btn-border-width solid $input-border-color;
    border-radius: $input-border-radius;
    @include box-shadow($input-box-shadow);
    @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);
    @extend %clearfix;

    &:focus,
    &:focus-within,
    &:active { border-color: $input-border-focus; }

    input[type="text"],
    input[type="email"],
    input[type="search"],
    input[type="password"] {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: 65%;
      background: transparent;
      border: 0 none;
      padding: 0;
      box-shadow: none !important;

      @include mqbp-up(md) { width: 80%; }

      &:before {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
      }

      &:before {
        font-family: "feathericons";
        content: "\e97b";
        left: 0.85rem;
        color: rgba($type-color, 0.5);

        @include mqbp-up(md) {
          left: 1rem;
        }

        @include mqbp-up(lg) {
          left: 1.25rem;
        }
      }
    }

    .btn {
      padding: 0.5rem;
      float: right;
      margin-bottom: 0;
    }

    &.\+line {
      background: transparent;
      padding-right: 0;
      padding-left: 0;
      border: 0 none;
      box-shadow: none;
      border-bottom: 1px solid rgba($type-color, 0.5);
      border-radius: 0;

      &:before {
        left: 0 !important;
      }

      .btn:not(:hover) {
        background: transparent;
      }
    }

    &.\--dark {
      border-color: rgba(255, 255, 255, 0.3);

      &:before { color: rgba(255, 255, 255, 0.5); }

      .btn {
        color: #fff;
        border-color: rgba(255, 255, 255, 0.5);

        &:hover { color: $type-color; }
      }

      input,
      ::placeholder { color: rgba($white, 0.7); }
    }
  }

  &.\--inline {
    @include mqbp-up(md) {
      display: flex;
      flex-flow: row;
      align-items: center;

      input,
      select,
      textarea {
        display: inline-block;
        margin-right: $spacer;
      }

      .btn { margin-bottom: 0; }
    }
  }
}

//
// Checkboxes and radios
// Indent the labels to position radios/checkboxes as hanging controls.

.\--check {
  position: relative;
  display: block;
  margin-bottom: ($spacer * .75);

  label {
    display: block;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    margin-bottom: 0;
    cursor: pointer;
    color: $input-color;
  }

  input {
    &:only-child {
      position: static;
      margin-right: 0.25rem;
    }
  }

  .disabled {
    color: $gray-400;
    cursor: $cursor-disabled;
  }

  // Radios and checkboxes on same line
  &.\--inline {
    label {
      display: inline-block;
      vertical-align: middle;
      margin-right: 1rem;
    }
  }
}

//
// search variant
.\--enclosed.\--search {
  &::before {
    content: $icon--search;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: 1rem;
    font-family: 'feathericons';
  }

  input[type="search"],
  input[type="text"] {
    margin-left: 2rem;
  }
}
