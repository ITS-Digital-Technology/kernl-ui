// Components
// Card


.card {
  @extend .d-flex;
  @include margin-bottom-gutter();
  @include type-sm();

  background: $white;
  box-shadow: $box-shadow-inset;

  flex-direction: column;
  overflow: visible;
  position: relative;
  width: 100%;

  // --
  // Options

  &.\-tile {
    @include type-xs();
  }

  &.\-overlay {
    background-color: $gray-800; // defined for accessibility conformance: contrast
    color: #fff;
    height: $tile_overlay_height;
    overflow: hidden;

    .card_media + .card_header + .card_body { margin-top: 3.5rem; }
  }

  &.\-middle {
    @extend .flex-middle;
  }

  &.\-bottom {
    @extend .justify-end;
  }

  // Horizontal orientation
  &.\-h {
    flex-direction: row;
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include mqbp-up($breakpoint) {
      // Veritcal @breakpoint
      &.\-v\@#{$breakpoint} {
        flex-direction: column;

        .card_header {
          width: 100%;
        }

        .card_footer {
          position: relative;
          left: auto;
          width: auto;
        }
      }

      // Horizontal @breakpoint
      &.\-h\@#{$breakpoint} {
        flex-direction: row;

        .card_header {
          width: 50%;
        }

        .card_footer {
          position: absolute;
          bottom: 0;
          left: 50%;
          width: 50%;
        }
      }
    }
  }

  // Size variants
  &.\-sm { height: $card-height-sm; }
  &.\-md { height: $card-height-md; }
  &.\-lg { height: $card-height-lg; }
  &.\-xl { height: $card-height-xl; }

  // Parent influence
  .\-flush & {
    box-shadow: none;
    margin-bottom: 0;
  }

  .stack & {
    border: 1px solid $gray-200;
    box-shadow: none;
    margin-bottom: -1px;
  }

  // --
  // Block-level child elements
  &_link {
    @extend .d-flex;
    color: inherit;

    flex-direction: column;
    min-height: 100%;
    transition: box-shadow $transition;
    width: 100%;

    &:hover {
      box-shadow: $box-shadow-inset-hover;
    }

    // Horizontal
    .\-h & {
      flex-direction: row;
    }

    @each $breakpoint in map-keys($breakpoints) {
      @include mqbp-up($breakpoint) {
        // Veritcal @breakpoint
        .\-v\@#{$breakpoint} & {
          flex-direction: column;
        }

        // Horizontal @breakpoint
        .\-h\@#{$breakpoint} & {
          flex-direction: row;
        }
      }
    }

    .\-overlay & {
      height: 100%;
    }

    .\-middle & {
      @extend .flex-middle;
    }

    .\-bottom & {
      @extend .justify-end;
    }

    .\-middle.\-overlay & {
      @extend .d-block;
      width: 100%;
    }
  }

  &_body {
    flex: 1;
    font-size: 100%;
    padding: $gutter / 2;

    p {
      font-size: inherit;
      line-height: inherit;

      &:last-child {
        margin-bottom: 0;
      }
    }

    .stack & {
      padding: $gutter $gutter ($gutter / 2);
    }

    .\-overlay & {
      max-height: 95%;
      overflow-y: hidden;
      position: absolute;
      width: 100%;
    }

    .\-tile & { padding: $gutter / 2; }

    .\-overlay &,
    .\-middle &,
    .\-bottom & {
      flex: 0;
    }

    .\-middle.\-overlay & {
      @extend .pin-c;

      text-align: center;
      width: 100%;
    }

    .\-h & {
      padding-bottom: $gutter * 2;
    }

    @each $breakpoint in map-keys($breakpoints) {
      @include mqbp-up($breakpoint) {
        // Veritcal @breakpoint
        .\-v\@#{$breakpoint} & {
          padding-bottom: $gutter;
        }

        // Horizontal @breakpoint
        .\-h\@#{$breakpoint} & {
          padding-bottom: $gutter * 2;
        }
      }
    }

    @include mqbp-up(d) {
      padding: $gutter;
    }
  }

  &_title {
    font-size: 118%;
    font-weight: 700;
    line-height: 1.25;
    margin: 0 0 0.5rem;
    padding: 0;
    transition: color 0.2s ease;
  }

  &_pretitle { margin-bottom: 0.2rem; }
  &_subtitle { font-size: 110%; }

  &_media {
    @extend .ar-16x9;

    background-color: $gray-800; // defined for accessibility conformance: contrast
    overflow: hidden;
    position: relative;
    width: 100%;

    &::after {
      content: '';
      display: block;
      height: 0;
    }

    + .card_header {
      border-bottom-color: $white-alpha;
      color: $white;

      + .card_body { margin-top: 0; }
    }

    .\-overlay & {
      min-height: 100%;
      min-width: 100%;
      padding: 0;

      &::after {
        @extend .pin;
        background-color: rgba(0, 0, 0, 0.7);
        content: '';
      }
    }

    // Media on right
    .\-r & {
      order: 1;
    }

    .\+avatar & {
      @extend .ar-1x1;
      @extend .br-round;

      max-height: 4rem;
      max-width: 4rem;
      margin: ($gutter / 2) 0 ($gutter / 2) ($gutter / 2);
    }

    .\-h & {
      width: 50%;
    }

    @each $breakpoint in map-keys($breakpoints) {
      @include mqbp-up($breakpoint) {
        // Veritcal @breakpoint
        .\-v\@#{$breakpoint} & {
          width: auto;
        }

        // Horizontal @breakpoint
        .\-h\@#{$breakpoint} & {
          width: 50%;
        }
      }
    }
  }

  // pins the <img>
  &_img {
    flex-shrink: 0;
    height: 100%;
    left: 0;
    min-height: 100%;
    min-width: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    width: 100%;
  }

  &_header {
    @extend .pos-absolute;
    @extend .pin-t;

    border-bottom: 1px solid $gray-100;
    padding: ($gutter / 2);
    width: 100%;
    z-index: 1;

    .\-middle.\-overlay & { @extend .pin-xc; }
    + .card_body { margin-top: 3.5rem; }

    @include mqbp-up(d) {
      padding: ($gutter / 2) $gutter;
    }

    .\-h & {
      width: 50%;
    }
  }

  &_footer {
    display: flex;
    font-size: 87.5%;
    justify-content: space-between;
    padding: 0 ($gutter / 2) ($gutter / 2);

    .\-overlay & {
      bottom: 0;
      position: absolute;
    }

    .stack & {
      padding: 0 $gutter $gutter;
    }

    @include mqbp-up(d) {
      padding: 0 $gutter $gutter;
    }

    .\-h & {
      position: absolute;
      bottom: 0;
      left: 50%;
      width: 50%;
    }
  }

  // Columns in header/footer
  &_column {
    @extend %component-column;

    align-self: center;
    padding: 0;
  }

  // cascade card_media aspect ratio
  @each $ar-name, $ar-value in $aspect-ratios {
    &.\+ar-#{$ar-name} {
      .card_media {
        @extend .ar-#{$ar-name};
      }
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include mqbp-up($breakpoint) {
      @each $ar-name, $ar-value in $aspect-ratios {
        &.\+ar-#{$ar-name}\@#{$breakpoint} {
          .card_media {
            @extend .ar-#{$ar-name}\@#{$breakpoint};
          }
        }
      }
    }
  }

  // cascade card_media width
  @each $cw-name, $cw-value in $card_widths {
    &.\+w-#{$cw-name} {
      .card_media {
        @extend .w-#{$cw-name};
      }
    }
  }
}

// Polyfill for object-fit:cover in MS Edge
// stylelint-disable selector-type-no-unknown
_:-ms-lang(x), .card .card_img {
  bottom: -10000px !important;
  height: auto !important;
  left: -10000px !important;
  margin: auto;
  min-height: 100%;
  min-width: 100%;
  right: -10000px !important;
  top: -10000px !important;
  width: auto !important;
  zoom: 0.1;
}
// stylelint-enable selector-type-no-unknown
